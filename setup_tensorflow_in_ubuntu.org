**** Installing Ubuntu Gnome 14.04
- Format external disk before installing, otherwise, you would run into an error.

*** Set up dev env

**** NVIDIA driver
- Download latest version of driver from [[http://www.nvidia.com/Download/index.aspx?lang=en-us][NVIDIA]]
- Remove recently installed drivers

#+BEGIN_SRC example
sudo apt-get purge nvidia*
#+END_SRC

- Shut down X server.

#+BEGIN_SRC example
sudo apt-get purge nvidia*
#+END_SRC

- Make the installer file excutable.

#+BEGIN_SRC example
chmod +x <path-to-file>
#+END_SRC

- Run the executable install file

#+BEGIN_SRC example
sudo sh <path-to-file>
#+END_SRC

Note: Don't delete the installer file. You need it to uninstall driver later.

#+BEGIN_SRC example
sudo sh <path-to-file> --uninstall
#+END_SRC

Reference: http://www.yourownlinux.com/2016/06/how-to-install-nvidia-367-27-stable-graphics-drivers-in-linux.html

**** Install CUDA 7.5
- https://developer.nvidia.com/cuda-downloads

**** Install Emacs
- Download Emacs 24.5 from https://www.gnu.org/software/emacs/download.html
  
- Install essential build tool and dependency.

#+BEGIN_SRC example
sudo apt-get install build-essential

sudo apt-get build-dep emacs24
#+END_SRC 

- cd to Emacs source directory where you unpacked Emacs

- Compile Emacs:

#+BEGIN_SRC example
./configure

make

sudo make install
#+END_SRC 

- To save store space, clean up binary files and object files.

#+BEGIN_SRC example

make clean

#+END_SRC

Reference:
- http://ergoemacs.org/emacs/building_emacs_on_linux.html
- /INSTALL/ file from Emacs

**** Install pip

- Download latest version of [[https://pip.pypa.io/en/stable/installing/][get-pip.py]]
- Run the following:

#+BEGIN_SRC python
python get-pip.py
#+END_SRC


**** Install CuDNN v4
- Download cuDNN v4.
- Uncompress archive file and copy files into toolkit directory

#+BEGIN_SRC example
tar xvzf <cudnn-file>
sudo cp cuda/include/cudnn.h /usr/local/cuda/include
sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64
sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*
#+END_SRC

- Set environment variables. Adding the command below to ~/.bashrc

#+BEGIN_SRC example
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/lib64"
export CUDA_HOME=/usr/local/cuda
#+END_SRC

- Activate the env variables

#+BEGIN_SRC example
source ~/.bashrc
#+END_SRC

- Test Tensorflow Installation

#+BEGIN_SRC python
import tensorflow as tf
sess = tf.InteractiveSession()
#+END_SRC

If you don't run into any error, it means Tensorflow is ready to go on your machine.

Reference:
- https://www.tensorflow.org/versions/r0.10/get_started/os_setup.html#optional-install-cuda-gpus-on-linux

**** Install Tensorflow 0.10
- Before intalling Tensorflow, you should check the latest avaiable version. I use 0.10 as an example.
- 
